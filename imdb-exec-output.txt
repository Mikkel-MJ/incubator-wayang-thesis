Time taken: 9s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_10a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: cast_info.movie_id
first join: JOIN title AS title ON title.id=cast_info.movie_id
Decompiled into sql query: SELECT char_name.name AS char_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note LIKE '%(voice)%' AND cast_info.note LIKE '%(uncredited)%' AND company_name.country_code = '[ru]' AND role_type.role = 'actor' AND title.production_year > '2005';
got to creating result set iterator: 
SqlToStream: executing: SELECT char_name.name AS char_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note LIKE '%(voice)%' AND cast_info.note LIKE '%(uncredited)%' AND company_name.country_code = '[ru]' AND role_type.role = 'actor' AND title.production_year > '2005'; in statement: org.postgresql.jdbc.PgStatement@712594f4 resultset: org.postgresql.jdbc.PgResultSet@30a4a111
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_10b.sql}
Last 10 output lines: matcher 1: char_name
matcher 3: char_name.id
non used table: cast_info.person_role_id
first join: JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id
Decompiled into sql query: SELECT char_name.name AS char_name,title.title AS title FROM cast_info JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note LIKE '%(producer)%' AND company_name.country_code = '[ru]' AND role_type.role = 'actor' AND title.production_year > '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT char_name.name AS char_name,title.title AS title FROM cast_info JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note LIKE '%(producer)%' AND company_name.country_code = '[ru]' AND role_type.role = 'actor' AND title.production_year > '2010'; in statement: org.postgresql.jdbc.PgStatement@54ddd7e4 resultset: org.postgresql.jdbc.PgResultSet@37f7ce20
[]

Results:  amount of records: 0

Time taken: 18s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_10c.sql}
Last 10 output lines: matcher 1: char_name
matcher 3: char_name.id
non used table: cast_info.person_role_id
first join: JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id
Decompiled into sql query: SELECT char_name.name AS char_name,title.title AS title FROM cast_info JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note LIKE '%(producer)%' AND company_name.country_code = '[us]' AND title.production_year > '1990';
got to creating result set iterator: 
SqlToStream: executing: SELECT char_name.name AS char_name,title.title AS title FROM cast_info JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note LIKE '%(producer)%' AND company_name.country_code = '[us]' AND title.production_year > '1990'; in statement: org.postgresql.jdbc.PgStatement@811d8d6 resultset: org.postgresql.jdbc.PgResultSet@7f57a7a4
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_11a.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follow%' AND movie_companies.note IS NULL AND title.production_year >= '1950' AND title.production_year <= '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follow%' AND movie_companies.note IS NULL AND title.production_year >= '1950' AND title.production_year <= '2000'; in statement: org.postgresql.jdbc.PgStatement@4379fe2a resultset: org.postgresql.jdbc.PgResultSet@e0f2686
[]

Results:  amount of records: 0

Time taken: 3s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_11b.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follows%' AND movie_companies.note IS NULL AND title.production_year = '1998' AND title.title LIKE '%Money%';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follows%' AND movie_companies.note IS NULL AND title.production_year = '1998' AND title.title LIKE '%Money%'; in statement: org.postgresql.jdbc.PgStatement@293ba26c resultset: org.postgresql.jdbc.PgResultSet@36dc6b9
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_11c.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_companies.note AS movie_companies,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '20th Century Fox%' OR company_name.name LIKE 'Twentieth Century Fox%') AND company_type.kind <> 'production companies' AND company_type.kind IS NOT NULL AND (keyword.keyword = 'sequel' OR keyword.keyword = 'revenge' OR keyword.keyword = 'based-on-novel') AND movie_companies.note IS NOT NULL AND title.production_year > '1950';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_companies.note AS movie_companies,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '20th Century Fox%' OR company_name.name LIKE 'Twentieth Century Fox%') AND company_type.kind <> 'production companies' AND company_type.kind IS NOT NULL AND (keyword.keyword = 'sequel' OR keyword.keyword = 'revenge' OR keyword.keyword = 'based-on-novel') AND movie_companies.note IS NOT NULL AND title.production_year > '1950'; in statement: org.postgresql.jdbc.PgStatement@3958db82 resultset: org.postgresql.jdbc.PgResultSet@577f81a0
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_11d.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_companies.note AS movie_companies,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code <> '[pl]' AND company_type.kind <> 'production companies' AND company_type.kind IS NOT NULL AND (keyword.keyword = 'sequel' OR keyword.keyword = 'revenge' OR keyword.keyword = 'based-on-novel') AND movie_companies.note IS NOT NULL AND title.production_year > '1950';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_companies.note AS movie_companies,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code <> '[pl]' AND company_type.kind <> 'production companies' AND company_type.kind IS NOT NULL AND (keyword.keyword = 'sequel' OR keyword.keyword = 'revenge' OR keyword.keyword = 'based-on-novel') AND movie_companies.note IS NOT NULL AND title.production_year > '1950'; in statement: org.postgresql.jdbc.PgStatement@9c40f43 resultset: org.postgresql.jdbc.PgResultSet@6cac0334
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_12a.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type.info = 'genres' AND info_type1.info = 'rating' AND (movie_info.info = 'Drama' OR movie_info.info = 'Horror') AND movie_info_idx.info > '8.0' AND title.production_year >= '2005' AND title.production_year <= '2008';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type.info = 'genres' AND info_type1.info = 'rating' AND (movie_info.info = 'Drama' OR movie_info.info = 'Horror') AND movie_info_idx.info > '8.0' AND title.production_year >= '2005' AND title.production_year <= '2008'; in statement: org.postgresql.jdbc.PgStatement@16c1345b resultset: org.postgresql.jdbc.PgResultSet@278cbf5a
[Record[10th Grade Reunion Films, 8.1, 3:20]]

Results:  amount of records: 1

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_12b.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT movie_info.info AS movie_info,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind IS NOT NULL AND (company_type.kind = 'production companies' OR company_type.kind = 'distributors') AND info_type.info = 'budget' AND info_type1.info = 'bottom 10 rank' AND title.production_year > '2000' AND (title.title LIKE 'Birdemic%' OR title.title LIKE '%Movie%');
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind IS NOT NULL AND (company_type.kind = 'production companies' OR company_type.kind = 'distributors') AND info_type.info = 'budget' AND info_type1.info = 'bottom 10 rank' AND title.production_year > '2000' AND (title.title LIKE 'Birdemic%' OR title.title LIKE '%Movie%'); in statement: org.postgresql.jdbc.PgStatement@3d2ff73a resultset: org.postgresql.jdbc.PgResultSet@736a8aea
[Record[$10,000, Birdemic: Shock and Terror]]

Results:  amount of records: 1

Time taken: 7s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_12c.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type.info = 'genres' AND info_type1.info = 'rating' AND (movie_info.info = 'Drama' OR movie_info.info = 'Horror' OR movie_info.info = 'Western' OR movie_info.info = 'Family') AND movie_info_idx.info > '7.0' AND title.production_year >= '2000' AND title.production_year <= '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type.info = 'genres' AND info_type1.info = 'rating' AND (movie_info.info = 'Drama' OR movie_info.info = 'Horror' OR movie_info.info = 'Western' OR movie_info.info = 'Family') AND movie_info_idx.info > '7.0' AND title.production_year >= '2000' AND title.production_year <= '2010'; in statement: org.postgresql.jdbc.PgStatement@7f5a25e2 resultset: org.postgresql.jdbc.PgResultSet@553d828a
[Record["Oh That Gus!", 7.1, $1.11]]

Results:  amount of records: 1

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_13a.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[de]' AND company_type.kind = 'production companies' AND info_type1.info = 'rating' AND info_type.info = 'release dates' AND kind_type.kind = 'movie';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[de]' AND company_type.kind = 'production companies' AND info_type1.info = 'rating' AND info_type.info = 'release dates' AND kind_type.kind = 'movie'; in statement: org.postgresql.jdbc.PgStatement@723f8990 resultset: org.postgresql.jdbc.PgResultSet@3bdc8975
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_13b.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type1.info = 'rating' AND info_type.info = 'release dates' AND kind_type.kind = 'movie' AND title.title <> '' AND (title.title LIKE '%Champion%' OR title.title LIKE '%Loser%');
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type1.info = 'rating' AND info_type.info = 'release dates' AND kind_type.kind = 'movie' AND title.title <> '' AND (title.title LIKE '%Champion%' OR title.title LIKE '%Loser%'); in statement: org.postgresql.jdbc.PgStatement@2f09907 resultset: org.postgresql.jdbc.PgResultSet@6f53295e
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_13c.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type1.info = 'rating' AND info_type.info = 'release dates' AND kind_type.kind = 'movie' AND title.title <> '' AND (title.title LIKE 'Champion%' OR title.title LIKE 'Loser%');
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type1.info = 'rating' AND info_type.info = 'release dates' AND kind_type.kind = 'movie' AND title.title <> '' AND (title.title LIKE 'Champion%' OR title.title LIKE 'Loser%'); in statement: org.postgresql.jdbc.PgStatement@401d83ce resultset: org.postgresql.jdbc.PgResultSet@3b7b099b
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_13d.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type1.info = 'rating' AND info_type.info = 'release dates' AND kind_type.kind = 'movie';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE company_name.country_code = '[us]' AND company_type.kind = 'production companies' AND info_type1.info = 'rating' AND info_type.info = 'release dates' AND kind_type.kind = 'movie'; in statement: org.postgresql.jdbc.PgStatement@5ff8d76f resultset: org.postgresql.jdbc.PgResultSet@178c4480
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_14a.sql}
Last 10 output lines: matcher 1: info_type
matcher 3: info_type.id
non used table: movie_info.info_type_id
first join: JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id
Decompiled into sql query: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND kind_type.kind = 'movie' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '8.5' AND title.production_year > '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND kind_type.kind = 'movie' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '8.5' AND title.production_year > '2010'; in statement: org.postgresql.jdbc.PgStatement@769f6023 resultset: org.postgresql.jdbc.PgResultSet@38a61c81
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_14b.sql}
Last 10 output lines: matcher 1: info_type
matcher 3: info_type.id
non used table: movie_info.info_type_id
first join: JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id
Decompiled into sql query: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title') AND kind_type.kind = 'movie' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info > '6.0' AND title.production_year > '2010' AND (title.title LIKE '%murder%' OR title.title LIKE '%Murder%' OR title.title LIKE '%Mord%');
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title') AND kind_type.kind = 'movie' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info > '6.0' AND title.production_year > '2010' AND (title.title LIKE '%murder%' OR title.title LIKE '%Murder%' OR title.title LIKE '%Mord%'); in statement: org.postgresql.jdbc.PgStatement@7a6b214c resultset: org.postgresql.jdbc.PgResultSet@81cd90e
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_14c.sql}
Last 10 output lines: matcher 1: info_type
matcher 3: info_type.id
non used table: movie_info.info_type_id
first join: JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id
Decompiled into sql query: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE info_type.info = 'countries' AND info_type1.info = 'rating' AND keyword.keyword IS NOT NULL AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND (kind_type.kind = 'movie' OR kind_type.kind = 'episode') AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Danish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '8.5' AND title.production_year > '2005';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE info_type.info = 'countries' AND info_type1.info = 'rating' AND keyword.keyword IS NOT NULL AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND (kind_type.kind = 'movie' OR kind_type.kind = 'episode') AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Danish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '8.5' AND title.production_year > '2005'; in statement: org.postgresql.jdbc.PgStatement@3e563293 resultset: org.postgresql.jdbc.PgResultSet@5b53c3c5
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_15a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: aka_title.movie_id
first join: JOIN title AS title ON title.id=aka_title.movie_id
Decompiled into sql query: SELECT movie_info.info AS movie_info,title.title AS title FROM aka_title JOIN title AS title ON title.id=aka_title.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id WHERE company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_companies.note LIKE '%(200%)%' AND movie_companies.note LIKE '%(worldwide)%' AND movie_info.note LIKE '%internet%' AND movie_info.info LIKE 'USA:% 200%' AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,title.title AS title FROM aka_title JOIN title AS title ON title.id=aka_title.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id WHERE company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_companies.note LIKE '%(200%)%' AND movie_companies.note LIKE '%(worldwide)%' AND movie_info.note LIKE '%internet%' AND movie_info.info LIKE 'USA:% 200%' AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@58701e8c resultset: org.postgresql.jdbc.PgResultSet@951461a
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_15b.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: aka_title.movie_id
first join: JOIN title AS title ON title.id=aka_title.movie_id
Decompiled into sql query: SELECT movie_info.info AS movie_info,title.title AS title FROM aka_title JOIN title AS title ON title.id=aka_title.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id WHERE company_name.country_code = '[us]' AND company_name.name = 'YouTube' AND info_type.info = 'release dates' AND movie_companies.note LIKE '%(200%)%' AND movie_companies.note LIKE '%(worldwide)%' AND movie_info.note LIKE '%internet%' AND movie_info.info LIKE 'USA:% 200%' AND title.production_year >= '2005' AND title.production_year <= '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,title.title AS title FROM aka_title JOIN title AS title ON title.id=aka_title.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id WHERE company_name.country_code = '[us]' AND company_name.name = 'YouTube' AND info_type.info = 'release dates' AND movie_companies.note LIKE '%(200%)%' AND movie_companies.note LIKE '%(worldwide)%' AND movie_info.note LIKE '%internet%' AND movie_info.info LIKE 'USA:% 200%' AND title.production_year >= '2005' AND title.production_year <= '2010'; in statement: org.postgresql.jdbc.PgStatement@c7d173f resultset: org.postgresql.jdbc.PgResultSet@12f12744
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_15c.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: aka_title.movie_id
first join: JOIN title AS title ON title.id=aka_title.movie_id
Decompiled into sql query: SELECT movie_info.info AS movie_info,title.title AS title FROM aka_title JOIN title AS title ON title.id=aka_title.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id WHERE company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_info.note LIKE '%internet%' AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'USA:% 199%' OR movie_info.info LIKE 'USA:% 200%') AND title.production_year > '1990';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,title.title AS title FROM aka_title JOIN title AS title ON title.id=aka_title.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id WHERE company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_info.note LIKE '%internet%' AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'USA:% 199%' OR movie_info.info LIKE 'USA:% 200%') AND title.production_year > '1990'; in statement: org.postgresql.jdbc.PgStatement@1fc4b8d6 resultset: org.postgresql.jdbc.PgResultSet@77185a2
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_15d.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: aka_title.movie_id
first join: JOIN title AS title ON title.id=aka_title.movie_id
Decompiled into sql query: SELECT title.title AS aka_title,title.title AS title FROM aka_title JOIN title AS title ON title.id=aka_title.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id WHERE company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_info.note LIKE '%internet%' AND title.production_year > '1990';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS aka_title,title.title AS title FROM aka_title JOIN title AS title ON title.id=aka_title.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id WHERE company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_info.note LIKE '%internet%' AND title.production_year > '1990'; in statement: org.postgresql.jdbc.PgStatement@487bc2fe resultset: org.postgresql.jdbc.PgResultSet@58038583
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_16a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: cast_info.movie_id
first join: JOIN title AS title ON title.id=cast_info.movie_id
Decompiled into sql query: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN aka_name AS aka_name ON aka_name.person_id=cast_info.person_id JOIN name AS name ON name.id=aka_name.person_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title' AND title.episode_nr >= '50' AND title.episode_nr < '100';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN aka_name AS aka_name ON aka_name.person_id=cast_info.person_id JOIN name AS name ON name.id=aka_name.person_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title' AND title.episode_nr >= '50' AND title.episode_nr < '100'; in statement: org.postgresql.jdbc.PgStatement@2f98fe6f resultset: org.postgresql.jdbc.PgResultSet@b0d4873
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_16b.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: cast_info.movie_id
first join: JOIN title AS title ON title.id=cast_info.movie_id
Decompiled into sql query: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN aka_name AS aka_name ON aka_name.person_id=cast_info.person_id JOIN name AS name ON name.id=aka_name.person_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN aka_name AS aka_name ON aka_name.person_id=cast_info.person_id JOIN name AS name ON name.id=aka_name.person_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title'; in statement: org.postgresql.jdbc.PgStatement@81cd90e resultset: org.postgresql.jdbc.PgResultSet@65fa56f7
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_16c.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: cast_info.movie_id
first join: JOIN title AS title ON title.id=cast_info.movie_id
Decompiled into sql query: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN aka_name AS aka_name ON aka_name.person_id=cast_info.person_id JOIN name AS name ON name.id=aka_name.person_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title' AND title.episode_nr < '100';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN aka_name AS aka_name ON aka_name.person_id=cast_info.person_id JOIN name AS name ON name.id=aka_name.person_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title' AND title.episode_nr < '100'; in statement: org.postgresql.jdbc.PgStatement@44a0e68f resultset: org.postgresql.jdbc.PgResultSet@567baa55
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_16d.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: cast_info.movie_id
first join: JOIN title AS title ON title.id=cast_info.movie_id
Decompiled into sql query: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN aka_name AS aka_name ON aka_name.person_id=cast_info.person_id JOIN name AS name ON name.id=aka_name.person_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title' AND title.episode_nr >= '5' AND title.episode_nr < '100';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN aka_name AS aka_name ON aka_name.person_id=cast_info.person_id JOIN name AS name ON name.id=aka_name.person_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title' AND title.episode_nr >= '5' AND title.episode_nr < '100'; in statement: org.postgresql.jdbc.PgStatement@7657d29f resultset: org.postgresql.jdbc.PgResultSet@6ace3
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_17a.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title' AND name.name LIKE 'B%';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title' AND name.name LIKE 'B%'; in statement: org.postgresql.jdbc.PgStatement@7ba623d1 resultset: org.postgresql.jdbc.PgResultSet@2d5435d4
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_17b.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE keyword.keyword = 'character-name-in-title' AND name.name LIKE 'Z%';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE keyword.keyword = 'character-name-in-title' AND name.name LIKE 'Z%'; in statement: org.postgresql.jdbc.PgStatement@33197c2f resultset: org.postgresql.jdbc.PgResultSet@24e79a4d
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_17c.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE keyword.keyword = 'character-name-in-title' AND name.name LIKE 'X%';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE keyword.keyword = 'character-name-in-title' AND name.name LIKE 'X%'; in statement: org.postgresql.jdbc.PgStatement@64f2b1b4 resultset: org.postgresql.jdbc.PgResultSet@11ad327f
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_17d.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE keyword.keyword = 'character-name-in-title' AND name.name LIKE '%Bert%';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE keyword.keyword = 'character-name-in-title' AND name.name LIKE '%Bert%'; in statement: org.postgresql.jdbc.PgStatement@71e89a26 resultset: org.postgresql.jdbc.PgResultSet@257708e
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_17e.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title'; in statement: org.postgresql.jdbc.PgStatement@7054c068 resultset: org.postgresql.jdbc.PgResultSet@48301bfe
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_17f.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE keyword.keyword = 'character-name-in-title' AND name.name LIKE '%B%';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id WHERE keyword.keyword = 'character-name-in-title' AND name.name LIKE '%B%'; in statement: org.postgresql.jdbc.PgStatement@5507584d resultset: org.postgresql.jdbc.PgResultSet@1e5e2e06
[]

Results:  amount of records: 0

Time taken: 19s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_18a.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(producer)' OR cast_info.note = '(executive producer)') AND info_type.info = 'budget' AND info_type1.info = 'votes' AND name.gender = 'm' AND name.name LIKE '%Tim%';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(producer)' OR cast_info.note = '(executive producer)') AND info_type.info = 'budget' AND info_type1.info = 'votes' AND name.gender = 'm' AND name.name LIKE '%Tim%'; in statement: org.postgresql.jdbc.PgStatement@1e5e2e06 resultset: org.postgresql.jdbc.PgResultSet@26c1f3eb
[Record[$1,000, 10, 40 Days and 40 Nights]]

Results:  amount of records: 1

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_18b.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'rating' AND (movie_info.info = 'Horror' OR movie_info.info = 'Thriller') AND movie_info.note IS NULL AND movie_info_idx.info > '8.0' AND name.gender IS NOT NULL AND name.gender = 'f' AND title.production_year >= '2008' AND title.production_year <= '2014';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'rating' AND (movie_info.info = 'Horror' OR movie_info.info = 'Thriller') AND movie_info.note IS NULL AND movie_info_idx.info > '8.0' AND name.gender IS NOT NULL AND name.gender = 'f' AND title.production_year >= '2008' AND title.production_year <= '2014'; in statement: org.postgresql.jdbc.PgStatement@1977b0df resultset: org.postgresql.jdbc.PgResultSet@4a490518
[Record[Horror, 8.1, Agorable]]

Results:  amount of records: 1

Time taken: 13s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_18c.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (movie_info.info = 'Horror' OR movie_info.info = 'Action' OR movie_info.info = 'Sci-Fi' OR movie_info.info = 'Thriller' OR movie_info.info = 'Crime' OR movie_info.info = 'War') AND name.gender = 'm';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (movie_info.info = 'Horror' OR movie_info.info = 'Action' OR movie_info.info = 'Sci-Fi' OR movie_info.info = 'Thriller' OR movie_info.info = 'Crime' OR movie_info.info = 'War') AND name.gender = 'm'; in statement: org.postgresql.jdbc.PgStatement@56887c8f resultset: org.postgresql.jdbc.PgResultSet@3b1895e
[Record[Action, 10, #PostModem]]

Results:  amount of records: 1

Time taken: 12s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_19a.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_companies.note IS NOT NULL AND (movie_companies.note LIKE '%(USA)%' OR movie_companies.note LIKE '%(worldwide)%') AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%200%' OR movie_info.info LIKE 'USA:%200%') AND name.gender = 'f' AND name.name LIKE '%Ang%' AND role_type.role = 'actress' AND cast_info.person_id = aka_name.person_id AND title.production_year >= '2005' AND title.production_year <= '2009';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_companies.note IS NOT NULL AND (movie_companies.note LIKE '%(USA)%' OR movie_companies.note LIKE '%(worldwide)%') AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%200%' OR movie_info.info LIKE 'USA:%200%') AND name.gender = 'f' AND name.name LIKE '%Ang%' AND role_type.role = 'actress' AND cast_info.person_id = aka_name.person_id AND title.production_year >= '2005' AND title.production_year <= '2009'; in statement: org.postgresql.jdbc.PgStatement@73d7e7aa resultset: org.postgresql.jdbc.PgResultSet@349686e8
[Record[Angeline, Moriah, Blue Harvest]]

Results:  amount of records: 1

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_19b.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE cast_info.note = '(voice)' AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_companies.note LIKE '%(200%)%' AND (movie_companies.note LIKE '%(USA)%' OR movie_companies.note LIKE '%(worldwide)%') AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%2007%' OR movie_info.info LIKE 'USA:%2008%') AND name.gender = 'f' AND name.name LIKE '%Angel%' AND role_type.role = 'actress' AND title.production_year >= '2007' AND title.production_year <= '2008' AND cast_info.person_id = aka_name.person_id AND title.title LIKE '%Kung%Fu%Panda%';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE cast_info.note = '(voice)' AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_companies.note LIKE '%(200%)%' AND (movie_companies.note LIKE '%(USA)%' OR movie_companies.note LIKE '%(worldwide)%') AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%2007%' OR movie_info.info LIKE 'USA:%2008%') AND name.gender = 'f' AND name.name LIKE '%Angel%' AND role_type.role = 'actress' AND title.production_year >= '2007' AND title.production_year <= '2008' AND cast_info.person_id = aka_name.person_id AND title.title LIKE '%Kung%Fu%Panda%'; in statement: org.postgresql.jdbc.PgStatement@174aabb2 resultset: org.postgresql.jdbc.PgResultSet@33b4c775
[Record[Jolie, Angelina, Kung Fu Panda]]

Results:  amount of records: 1

Time taken: 21s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_19c.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%200%' OR movie_info.info LIKE 'USA:%200%') AND name.gender = 'f' AND name.name LIKE '%An%' AND role_type.role = 'actress' AND cast_info.person_id = aka_name.person_id AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%200%' OR movie_info.info LIKE 'USA:%200%') AND name.gender = 'f' AND name.name LIKE '%An%' AND role_type.role = 'actress' AND cast_info.person_id = aka_name.person_id AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@3a7f382 resultset: org.postgresql.jdbc.PgResultSet@5a2297d7
[Record[Alborg, Ana Esther, .hack//Akusei heni vol. 2]]

Results:  amount of records: 1

Time taken: 46s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_19d.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND name.gender = 'f' AND role_type.role = 'actress' AND cast_info.person_id = aka_name.person_id AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND name.gender = 'f' AND role_type.role = 'actress' AND cast_info.person_id = aka_name.person_id AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@3c7f8c25 resultset: org.postgresql.jdbc.PgResultSet@4110ffe5
[Record[Aaron, Caroline, $9.99]]

Results:  amount of records: 1

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_1a.sql}
Last 10 output lines: matcher 1: company_type
matcher 3: company_type.id
non used table: movie_companies.company_type_id
first join: JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id
Decompiled into sql query: SELECT movie_companies.note AS movie_companies,title.title AS title,title.production_year AS title FROM movie_companies JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id WHERE company_type.kind = 'production companies' AND info_type.info = 'top 250 rank' AND  NOT (movie_companies.note LIKE '%(as Metro-Goldwyn-Mayer Pictures)%') AND (movie_companies.note LIKE '%(co-production)%' OR movie_companies.note LIKE '%(presents)%') AND movie_companies.movie_id = movie_info_idx.movie_id;
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_companies.note AS movie_companies,title.title AS title,title.production_year AS title FROM movie_companies JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id WHERE company_type.kind = 'production companies' AND info_type.info = 'top 250 rank' AND  NOT (movie_companies.note LIKE '%(as Metro-Goldwyn-Mayer Pictures)%') AND (movie_companies.note LIKE '%(co-production)%' OR movie_companies.note LIKE '%(presents)%') AND movie_companies.movie_id = movie_info_idx.movie_id; in statement: org.postgresql.jdbc.PgStatement@4be3de36 resultset: org.postgresql.jdbc.PgResultSet@5c03eb4e
[Record[(A Warner Bros.-First National Picture) (presents), A Clockwork Orange, 1934]]

Results:  amount of records: 1

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_1b.sql}
Last 10 output lines: matcher 1: company_type
matcher 3: company_type.id
non used table: movie_companies.company_type_id
first join: JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id
Decompiled into sql query: SELECT movie_companies.note AS movie_companies,title.title AS title,title.production_year AS title FROM movie_companies JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id WHERE company_type.kind = 'production companies' AND info_type.info = 'bottom 10 rank' AND  NOT (movie_companies.note LIKE '%(as Metro-Goldwyn-Mayer Pictures)%') AND title.production_year >= '2005' AND title.production_year <= '2010' AND title.id = movie_info_idx.movie_id;
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_companies.note AS movie_companies,title.title AS title,title.production_year AS title FROM movie_companies JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id WHERE company_type.kind = 'production companies' AND info_type.info = 'bottom 10 rank' AND  NOT (movie_companies.note LIKE '%(as Metro-Goldwyn-Mayer Pictures)%') AND title.production_year >= '2005' AND title.production_year <= '2010' AND title.id = movie_info_idx.movie_id; in statement: org.postgresql.jdbc.PgStatement@41c88e00 resultset: org.postgresql.jdbc.PgResultSet@4fea095b
[Record[(Set Decoration Rentals) (uncredited), Disaster Movie, 2008]]

Results:  amount of records: 1

Time taken: 3s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_1c.sql}
Last 10 output lines: matcher 1: company_type
matcher 3: company_type.id
non used table: movie_companies.company_type_id
first join: JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id
Decompiled into sql query: SELECT movie_companies.note AS movie_companies,title.title AS title,title.production_year AS title FROM movie_companies JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id WHERE company_type.kind = 'production companies' AND info_type.info = 'top 250 rank' AND  NOT (movie_companies.note LIKE '%(as Metro-Goldwyn-Mayer Pictures)%') AND movie_companies.note LIKE '%(co-production)%' AND movie_companies.movie_id = movie_info_idx.movie_id AND title.production_year > '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_companies.note AS movie_companies,title.title AS title,title.production_year AS title FROM movie_companies JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id WHERE company_type.kind = 'production companies' AND info_type.info = 'top 250 rank' AND  NOT (movie_companies.note LIKE '%(as Metro-Goldwyn-Mayer Pictures)%') AND movie_companies.note LIKE '%(co-production)%' AND movie_companies.movie_id = movie_info_idx.movie_id AND title.production_year > '2010'; in statement: org.postgresql.jdbc.PgStatement@41c88e00 resultset: org.postgresql.jdbc.PgResultSet@4fea095b
[Record[(co-production), Intouchables, 2011]]

Results:  amount of records: 1

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_1d.sql}
Last 10 output lines: matcher 1: company_type
matcher 3: company_type.id
non used table: movie_companies.company_type_id
first join: JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id
Decompiled into sql query: SELECT movie_companies.note AS movie_companies,title.title AS title,title.production_year AS title FROM movie_companies JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id WHERE company_type.kind = 'production companies' AND info_type.info = 'bottom 10 rank' AND  NOT (movie_companies.note LIKE '%(as Metro-Goldwyn-Mayer Pictures)%') AND movie_companies.movie_id = movie_info_idx.movie_id AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_companies.note AS movie_companies,title.title AS title,title.production_year AS title FROM movie_companies JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id WHERE company_type.kind = 'production companies' AND info_type.info = 'bottom 10 rank' AND  NOT (movie_companies.note LIKE '%(as Metro-Goldwyn-Mayer Pictures)%') AND movie_companies.movie_id = movie_info_idx.movie_id AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@52fec840 resultset: org.postgresql.jdbc.PgResultSet@7fd4b9ec
[Record[(Set Decoration Rentals) (uncredited), Disaster Movie, 2004]]

Results:  amount of records: 1

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_20a.sql}
Last 10 output lines: matcher 1: complete_cast
matcher 3: complete_cast.subject_id
non used table: comp_cast_type.id
first join: JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id
Decompiled into sql query: SELECT title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=cast_info.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN name AS name ON name.id=cast_info.person_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind LIKE '%complete%' AND  NOT (char_name.name LIKE '%Sherlock%') AND (char_name.name LIKE '%Tony%Stark%' OR char_name.name LIKE '%Iron%Man%') AND (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND kind_type.kind = 'movie' AND title.production_year > '1950';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=cast_info.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN name AS name ON name.id=cast_info.person_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind LIKE '%complete%' AND  NOT (char_name.name LIKE '%Sherlock%') AND (char_name.name LIKE '%Tony%Stark%' OR char_name.name LIKE '%Iron%Man%') AND (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND kind_type.kind = 'movie' AND title.production_year > '1950'; in statement: org.postgresql.jdbc.PgStatement@3cd758be resultset: org.postgresql.jdbc.PgResultSet@562ec518
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_20b.sql}
Last 10 output lines: matcher 1: complete_cast
matcher 3: complete_cast.subject_id
non used table: comp_cast_type.id
first join: JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id
Decompiled into sql query: SELECT title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=cast_info.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN name AS name ON name.id=cast_info.person_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind LIKE '%complete%' AND  NOT (char_name.name LIKE '%Sherlock%') AND (char_name.name LIKE '%Tony%Stark%' OR char_name.name LIKE '%Iron%Man%') AND (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND kind_type.kind = 'movie' AND name.name LIKE '%Downey%Robert%' AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=cast_info.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN name AS name ON name.id=cast_info.person_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind LIKE '%complete%' AND  NOT (char_name.name LIKE '%Sherlock%') AND (char_name.name LIKE '%Tony%Stark%' OR char_name.name LIKE '%Iron%Man%') AND (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND kind_type.kind = 'movie' AND name.name LIKE '%Downey%Robert%' AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@7be3a837 resultset: org.postgresql.jdbc.PgResultSet@247d44b4
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_20c.sql}
Last 10 output lines: matcher 1: complete_cast
matcher 3: complete_cast.subject_id
non used table: comp_cast_type.id
first join: JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id
Decompiled into sql query: SELECT name.name AS name,title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=cast_info.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN name AS name ON name.id=cast_info.person_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind LIKE '%complete%' AND char_name.name IS NOT NULL AND (char_name.name LIKE '%man%' OR char_name.name LIKE '%Man%') AND (keyword.keyword = 'superhero' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence' OR keyword.keyword = 'magnet' OR keyword.keyword = 'web' OR keyword.keyword = 'claw' OR keyword.keyword = 'laser') AND kind_type.kind = 'movie' AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name,title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=cast_info.movie_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN name AS name ON name.id=cast_info.person_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind LIKE '%complete%' AND char_name.name IS NOT NULL AND (char_name.name LIKE '%man%' OR char_name.name LIKE '%Man%') AND (keyword.keyword = 'superhero' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence' OR keyword.keyword = 'magnet' OR keyword.keyword = 'web' OR keyword.keyword = 'claw' OR keyword.keyword = 'laser') AND kind_type.kind = 'movie' AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@5b5e45bc resultset: org.postgresql.jdbc.PgResultSet@10c1682b
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_21a.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follow%' AND movie_companies.note IS NULL AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German') AND title.production_year >= '1950' AND title.production_year <= '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follow%' AND movie_companies.note IS NULL AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German') AND title.production_year >= '1950' AND title.production_year <= '2000'; in statement: org.postgresql.jdbc.PgStatement@a0e35c3 resultset: org.postgresql.jdbc.PgResultSet@1d7f0cd0
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_21b.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follow%' AND movie_companies.note IS NULL AND (movie_info.info = 'Germany' OR movie_info.info = 'German') AND title.production_year >= '2000' AND title.production_year <= '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follow%' AND movie_companies.note IS NULL AND (movie_info.info = 'Germany' OR movie_info.info = 'German') AND title.production_year >= '2000' AND title.production_year <= '2010'; in statement: org.postgresql.jdbc.PgStatement@77185a2 resultset: org.postgresql.jdbc.PgResultSet@2dbc66f0
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_21c.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follow%' AND movie_companies.note IS NULL AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'English') AND title.production_year >= '1950' AND title.production_year <= '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,link_type.link AS link_type,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE company_name.country_code <> '[pl]' AND (company_name.name LIKE '%Film%' OR company_name.name LIKE '%Warner%') AND company_type.kind = 'production companies' AND keyword.keyword = 'sequel' AND link_type.link LIKE '%follow%' AND movie_companies.note IS NULL AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'English') AND title.production_year >= '1950' AND title.production_year <= '2010'; in statement: org.postgresql.jdbc.PgStatement@3013e1e8 resultset: org.postgresql.jdbc.PgResultSet@6e5a77ef
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_22a.sql}
Last 10 output lines: 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.apache.wayang.jdbc.execution.JdbcExecutor.execute(JdbcExecutor.java:122)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.execute(CrossPlatformExecutor.java:378)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.executeSingleStage(CrossPlatformExecutor.java:248)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.runToBreakpoint(CrossPlatformExecutor.java:320)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.executeUntilBreakpoint(CrossPlatformExecutor.java:156)
	at org.apache.wayang.core.api.Job.execute(Job.java:578)
	at org.apache.wayang.core.api.Job.doExecute(Job.java:314)
	... 7 more

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_22b.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE company_name.country_code <> '[us]' AND info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND (kind_type.kind = 'movie' OR kind_type.kind = 'episode') AND  NOT (movie_companies.note LIKE '%(USA)%') AND movie_companies.note LIKE '%(200%)%' AND (movie_info.info = 'Germany' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '7.0' AND title.production_year > '2009';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE company_name.country_code <> '[us]' AND info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND (kind_type.kind = 'movie' OR kind_type.kind = 'episode') AND  NOT (movie_companies.note LIKE '%(USA)%') AND movie_companies.note LIKE '%(200%)%' AND (movie_info.info = 'Germany' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '7.0' AND title.production_year > '2009'; in statement: org.postgresql.jdbc.PgStatement@589a82af resultset: org.postgresql.jdbc.PgResultSet@5edce7da
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_22c.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE company_name.country_code <> '[us]' AND info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND (kind_type.kind = 'movie' OR kind_type.kind = 'episode') AND  NOT (movie_companies.note LIKE '%(USA)%') AND movie_companies.note LIKE '%(200%)%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Danish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '8.5' AND title.production_year > '2005';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE company_name.country_code <> '[us]' AND info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND (kind_type.kind = 'movie' OR kind_type.kind = 'episode') AND  NOT (movie_companies.note LIKE '%(USA)%') AND movie_companies.note LIKE '%(200%)%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Danish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '8.5' AND title.production_year > '2005'; in statement: org.postgresql.jdbc.PgStatement@76929266 resultset: org.postgresql.jdbc.PgResultSet@20331c8e
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_22d.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE company_name.country_code <> '[us]' AND info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND (kind_type.kind = 'movie' OR kind_type.kind = 'episode') AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Danish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '8.5' AND title.production_year > '2005';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_companies.movie_id JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id WHERE company_name.country_code <> '[us]' AND info_type.info = 'countries' AND info_type1.info = 'rating' AND (keyword.keyword = 'murder' OR keyword.keyword = 'murder-in-title' OR keyword.keyword = 'blood' OR keyword.keyword = 'violence') AND (kind_type.kind = 'movie' OR kind_type.kind = 'episode') AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Danish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND movie_info_idx.info < '8.5' AND title.production_year > '2005'; in statement: org.postgresql.jdbc.PgStatement@4924ad09 resultset: org.postgresql.jdbc.PgResultSet@7e9d171c
[]

Results:  amount of records: 0

Time taken: 7s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_24a.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND (keyword.keyword = 'hero' OR keyword.keyword = 'martial-arts' OR keyword.keyword = 'hand-to-hand-combat') AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%201%' OR movie_info.info LIKE 'USA:%201%') AND name.gender = 'f' AND name.name LIKE '%An%' AND role_type.role = 'actress' AND cast_info.person_id = aka_name.person_id AND title.production_year > '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND info_type.info = 'release dates' AND (keyword.keyword = 'hero' OR keyword.keyword = 'martial-arts' OR keyword.keyword = 'hand-to-hand-combat') AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%201%' OR movie_info.info LIKE 'USA:%201%') AND name.gender = 'f' AND name.name LIKE '%An%' AND role_type.role = 'actress' AND cast_info.person_id = aka_name.person_id AND title.production_year > '2010'; in statement: org.postgresql.jdbc.PgStatement@4690a37e resultset: org.postgresql.jdbc.PgResultSet@23f27434
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_24b.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND company_name.name = 'DreamWorks Animation' AND info_type.info = 'release dates' AND cast_info.person_id = aka_name.person_id AND (keyword.keyword = 'hero' OR keyword.keyword = 'martial-arts' OR keyword.keyword = 'hand-to-hand-combat' OR keyword.keyword = 'computer-animated-movie') AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%201%' OR movie_info.info LIKE 'USA:%201%') AND name.gender = 'f' AND name.name LIKE '%An%' AND role_type.role = 'actress' AND title.production_year > '2010' AND title.title LIKE 'Kung Fu Panda%';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND company_name.name = 'DreamWorks Animation' AND info_type.info = 'release dates' AND cast_info.person_id = aka_name.person_id AND (keyword.keyword = 'hero' OR keyword.keyword = 'martial-arts' OR keyword.keyword = 'hand-to-hand-combat' OR keyword.keyword = 'computer-animated-movie') AND movie_info.info IS NOT NULL AND (movie_info.info LIKE 'Japan:%201%' OR movie_info.info LIKE 'USA:%201%') AND name.gender = 'f' AND name.name LIKE '%An%' AND role_type.role = 'actress' AND title.production_year > '2010' AND title.title LIKE 'Kung Fu Panda%'; in statement: org.postgresql.jdbc.PgStatement@2cd6fae8 resultset: org.postgresql.jdbc.PgResultSet@7d5ddfac
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_25a.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity') AND movie_info.info = 'Horror' AND name.gender = 'm';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity') AND movie_info.info = 'Horror' AND name.gender = 'm'; in statement: org.postgresql.jdbc.PgStatement@758ac46 resultset: org.postgresql.jdbc.PgResultSet@4d2f8ee7
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_25b.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.person_id
non used table: name.id
first join: JOIN cast_info AS cast_info ON cast_info.person_id=name.id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity') AND movie_info.info = 'Horror' AND name.gender = 'm' AND title.production_year > '2010' AND title.title LIKE 'Vampire%';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM name JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity') AND movie_info.info = 'Horror' AND name.gender = 'm' AND title.production_year > '2010' AND title.title LIKE 'Vampire%'; in statement: org.postgresql.jdbc.PgStatement@40da1644 resultset: org.postgresql.jdbc.PgResultSet@5980e29f
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_25c.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: title.id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=title.id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM title JOIN cast_info AS cast_info ON cast_info.movie_id=title.id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Action' OR movie_info.info = 'Sci-Fi' OR movie_info.info = 'Thriller' OR movie_info.info = 'Crime' OR movie_info.info = 'War') AND name.gender = 'm';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM title JOIN cast_info AS cast_info ON cast_info.movie_id=title.id JOIN movie_info AS movie_info ON movie_info.movie_id=title.id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Action' OR movie_info.info = 'Sci-Fi' OR movie_info.info = 'Thriller' OR movie_info.info = 'Crime' OR movie_info.info = 'War') AND name.gender = 'm'; in statement: org.postgresql.jdbc.PgStatement@6491006 resultset: org.postgresql.jdbc.PgResultSet@42fb2be9
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_26a.sql}
Last 10 output lines: matcher 1: complete_cast
matcher 3: complete_cast.subject_id
non used table: comp_cast_type.id
first join: JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id
Decompiled into sql query: SELECT name.name AS char_name,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN name AS name ON name.id=cast_info.person_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind LIKE '%complete%' AND char_name.name IS NOT NULL AND (char_name.name LIKE '%man%' OR char_name.name LIKE '%Man%') AND info_type.info = 'rating' AND (keyword.keyword = 'superhero' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence' OR keyword.keyword = 'magnet' OR keyword.keyword = 'web' OR keyword.keyword = 'claw' OR keyword.keyword = 'laser') AND kind_type.kind = 'movie' AND movie_info_idx.info > '7.0' AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS char_name,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN name AS name ON name.id=cast_info.person_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind LIKE '%complete%' AND char_name.name IS NOT NULL AND (char_name.name LIKE '%man%' OR char_name.name LIKE '%Man%') AND info_type.info = 'rating' AND (keyword.keyword = 'superhero' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence' OR keyword.keyword = 'magnet' OR keyword.keyword = 'web' OR keyword.keyword = 'claw' OR keyword.keyword = 'laser') AND kind_type.kind = 'movie' AND movie_info_idx.info > '7.0' AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@29becf8b resultset: org.postgresql.jdbc.PgResultSet@628b1538
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_26b.sql}
Last 10 output lines: 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.apache.wayang.jdbc.execution.JdbcExecutor.execute(JdbcExecutor.java:122)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.execute(CrossPlatformExecutor.java:378)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.executeSingleStage(CrossPlatformExecutor.java:248)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.runToBreakpoint(CrossPlatformExecutor.java:320)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.executeUntilBreakpoint(CrossPlatformExecutor.java:156)
	at org.apache.wayang.core.api.Job.execute(Job.java:578)
	at org.apache.wayang.core.api.Job.doExecute(Job.java:314)
	... 7 more

Time taken: 3s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_2a.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code = '[de]' AND keyword.keyword = 'character-name-in-title';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code = '[de]' AND keyword.keyword = 'character-name-in-title'; in statement: org.postgresql.jdbc.PgStatement@6ed7c178 resultset: org.postgresql.jdbc.PgResultSet@1c382179
[]

Results:  amount of records: 0

Time taken: 3s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_2b.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code = '[nl]' AND keyword.keyword = 'character-name-in-title';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code = '[nl]' AND keyword.keyword = 'character-name-in-title'; in statement: org.postgresql.jdbc.PgStatement@729c8def resultset: org.postgresql.jdbc.PgResultSet@41c88e00
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_2c.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code = '[sm]' AND keyword.keyword = 'character-name-in-title';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code = '[sm]' AND keyword.keyword = 'character-name-in-title'; in statement: org.postgresql.jdbc.PgStatement@19355a56 resultset: org.postgresql.jdbc.PgResultSet@1ff23bd1
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_2d.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE company_name.country_code = '[us]' AND keyword.keyword = 'character-name-in-title'; in statement: org.postgresql.jdbc.PgStatement@406808eb resultset: org.postgresql.jdbc.PgResultSet@14e93c46
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_30a.sql}
Last 10 output lines: 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.apache.wayang.jdbc.execution.JdbcExecutor.execute(JdbcExecutor.java:122)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.execute(CrossPlatformExecutor.java:378)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.executeSingleStage(CrossPlatformExecutor.java:248)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.runToBreakpoint(CrossPlatformExecutor.java:320)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.executeUntilBreakpoint(CrossPlatformExecutor.java:156)
	at org.apache.wayang.core.api.Job.execute(Job.java:578)
	at org.apache.wayang.core.api.Job.doExecute(Job.java:314)
	... 7 more

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_30b.sql}
Last 10 output lines: matcher 1: complete_cast
matcher 3: complete_cast.subject_id
non used table: comp_cast_type.id
first join: JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE (comp_cast_type.kind = 'cast' OR comp_cast_type.kind = 'crew') AND comp_cast_type1.kind = 'complete+verified' AND (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Thriller') AND name.gender = 'm' AND title.production_year > '2000' AND (title.title LIKE '%Freddy%' OR title.title LIKE '%Jason%' OR title.title LIKE 'Saw%');
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE (comp_cast_type.kind = 'cast' OR comp_cast_type.kind = 'crew') AND comp_cast_type1.kind = 'complete+verified' AND (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Thriller') AND name.gender = 'm' AND title.production_year > '2000' AND (title.title LIKE '%Freddy%' OR title.title LIKE '%Jason%' OR title.title LIKE 'Saw%'); in statement: org.postgresql.jdbc.PgStatement@2f53e07d resultset: org.postgresql.jdbc.PgResultSet@5c3ad125
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_30c.sql}
Last 10 output lines: matcher 1: complete_cast
matcher 3: complete_cast.subject_id
non used table: comp_cast_type.id
first join: JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind = 'complete+verified' AND (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Action' OR movie_info.info = 'Sci-Fi' OR movie_info.info = 'Thriller' OR movie_info.info = 'Crime' OR movie_info.info = 'War') AND name.gender = 'm';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM comp_cast_type JOIN complete_cast AS complete_cast ON complete_cast.subject_id=comp_cast_type.id JOIN comp_cast_type AS comp_cast_type1 ON comp_cast_type1.id=complete_cast.status_id JOIN cast_info AS cast_info ON cast_info.movie_id=complete_cast.movie_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE comp_cast_type.kind = 'cast' AND comp_cast_type1.kind = 'complete+verified' AND (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Action' OR movie_info.info = 'Sci-Fi' OR movie_info.info = 'Thriller' OR movie_info.info = 'Crime' OR movie_info.info = 'War') AND name.gender = 'm'; in statement: org.postgresql.jdbc.PgStatement@4fb3c670 resultset: org.postgresql.jdbc.PgResultSet@6b6c882c
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_31a.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: movie_companies.movie_id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM movie_companies JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND company_name.name LIKE 'Lionsgate%' AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Thriller') AND name.gender = 'm';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM movie_companies JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND company_name.name LIKE 'Lionsgate%' AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Thriller') AND name.gender = 'm'; in statement: org.postgresql.jdbc.PgStatement@3941bdd7 resultset: org.postgresql.jdbc.PgResultSet@69c7eafd
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_31b.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: movie_companies.movie_id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM movie_companies JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND company_name.name LIKE 'Lionsgate%' AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND movie_companies.note LIKE '%(Blu-ray)%' AND (movie_info.info = 'Horror' OR movie_info.info = 'Thriller') AND name.gender = 'm' AND title.production_year > '2000' AND (title.title LIKE '%Freddy%' OR title.title LIKE '%Jason%' OR title.title LIKE 'Saw%');
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM movie_companies JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND company_name.name LIKE 'Lionsgate%' AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND movie_companies.note LIKE '%(Blu-ray)%' AND (movie_info.info = 'Horror' OR movie_info.info = 'Thriller') AND name.gender = 'm' AND title.production_year > '2000' AND (title.title LIKE '%Freddy%' OR title.title LIKE '%Jason%' OR title.title LIKE 'Saw%'); in statement: org.postgresql.jdbc.PgStatement@7385a72f resultset: org.postgresql.jdbc.PgResultSet@5ff12345
[]

Results:  amount of records: 0

Time taken: 7s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_31c.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: movie_companies.movie_id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id
Decompiled into sql query: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM movie_companies JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND company_name.name LIKE 'Lionsgate%' AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Action' OR movie_info.info = 'Sci-Fi' OR movie_info.info = 'Thriller' OR movie_info.info = 'Crime' OR movie_info.info = 'War') AND title.id = movie_info.movie_id AND title.id = movie_info_idx.movie_id AND title.id = cast_info.movie_id AND title.id = movie_keyword.movie_id AND title.id = movie_companies.movie_id AND cast_info.movie_id = movie_info.movie_id AND cast_info.movie_id = movie_info_idx.movie_id AND cast_info.movie_id = movie_keyword.movie_id AND cast_info.movie_id = movie_companies.movie_id AND movie_info.movie_id = movie_info_idx.movie_id AND movie_info.movie_id = movie_keyword.movie_id AND movie_info.movie_id = movie_companies.movie_id AND movie_info_idx.movie_id = movie_keyword.movie_id AND movie_info_idx.movie_id = movie_companies.movie_id AND movie_keyword.movie_id = movie_companies.movie_id AND name.id = cast_info.person_id AND info_type.id = movie_info.info_type_id AND info_type1.id = movie_info_idx.info_type_id AND keyword.id = movie_keyword.keyword_id AND company_name.id = movie_companies.company_id;
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info.info AS movie_info,movie_info_idx.info AS movie_info_idx,name.name AS name,title.title AS title FROM movie_companies JOIN cast_info AS cast_info ON cast_info.movie_id=movie_companies.movie_id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN movie_info AS movie_info ON movie_info.movie_id=cast_info.movie_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=cast_info.movie_id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=cast_info.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN name AS name ON name.id=cast_info.person_id JOIN title AS title ON title.id=cast_info.movie_id WHERE (cast_info.note = '(writer)' OR cast_info.note = '(head writer)' OR cast_info.note = '(written by)' OR cast_info.note = '(story)' OR cast_info.note = '(story editor)') AND company_name.name LIKE 'Lionsgate%' AND info_type.info = 'genres' AND info_type1.info = 'votes' AND (keyword.keyword = 'murder' OR keyword.keyword = 'violence' OR keyword.keyword = 'blood' OR keyword.keyword = 'gore' OR keyword.keyword = 'death' OR keyword.keyword = 'female-nudity' OR keyword.keyword = 'hospital') AND (movie_info.info = 'Horror' OR movie_info.info = 'Action' OR movie_info.info = 'Sci-Fi' OR movie_info.info = 'Thriller' OR movie_info.info = 'Crime' OR movie_info.info = 'War') AND title.id = movie_info.movie_id AND title.id = movie_info_idx.movie_id AND title.id = cast_info.movie_id AND title.id = movie_keyword.movie_id AND title.id = movie_companies.movie_id AND cast_info.movie_id = movie_info.movie_id AND cast_info.movie_id = movie_info_idx.movie_id AND cast_info.movie_id = movie_keyword.movie_id AND cast_info.movie_id = movie_companies.movie_id AND movie_info.movie_id = movie_info_idx.movie_id AND movie_info.movie_id = movie_keyword.movie_id AND movie_info.movie_id = movie_companies.movie_id AND movie_info_idx.movie_id = movie_keyword.movie_id AND movie_info_idx.movie_id = movie_companies.movie_id AND movie_keyword.movie_id = movie_companies.movie_id AND name.id = cast_info.person_id AND info_type.id = movie_info.info_type_id AND info_type1.id = movie_info_idx.info_type_id AND keyword.id = movie_keyword.keyword_id AND company_name.id = movie_companies.company_id; in statement: org.postgresql.jdbc.PgStatement@4807b2b7 resultset: org.postgresql.jdbc.PgResultSet@71eead09
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_32a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: movie_keyword.movie_id
first join: JOIN title AS title ON title.id=movie_keyword.movie_id
Decompiled into sql query: SELECT link_type.link AS link_type,title.title AS title,title.title AS title1 FROM movie_keyword JOIN title AS title ON title.id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN title AS title1 ON title1.id=movie_link.linked_movie_id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE keyword.keyword = '10,000-mile-club';
got to creating result set iterator: 
SqlToStream: executing: SELECT link_type.link AS link_type,title.title AS title,title.title AS title1 FROM movie_keyword JOIN title AS title ON title.id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN title AS title1 ON title1.id=movie_link.linked_movie_id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE keyword.keyword = '10,000-mile-club'; in statement: org.postgresql.jdbc.PgStatement@52d01430 resultset: org.postgresql.jdbc.PgResultSet@3fdede3a
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_32b.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: movie_keyword.movie_id
first join: JOIN title AS title ON title.id=movie_keyword.movie_id
Decompiled into sql query: SELECT link_type.link AS link_type,title.title AS title,title.title AS title1 FROM movie_keyword JOIN title AS title ON title.id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN title AS title1 ON title1.id=movie_link.linked_movie_id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE keyword.keyword = 'character-name-in-title';
got to creating result set iterator: 
SqlToStream: executing: SELECT link_type.link AS link_type,title.title AS title,title.title AS title1 FROM movie_keyword JOIN title AS title ON title.id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN title AS title1 ON title1.id=movie_link.linked_movie_id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id WHERE keyword.keyword = 'character-name-in-title'; in statement: org.postgresql.jdbc.PgStatement@65d2d3cc resultset: org.postgresql.jdbc.PgResultSet@5382a35f
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_33a.sql}
Last 10 output lines: 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.apache.wayang.jdbc.execution.JdbcExecutor.execute(JdbcExecutor.java:122)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.execute(CrossPlatformExecutor.java:378)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.executeSingleStage(CrossPlatformExecutor.java:248)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.runToBreakpoint(CrossPlatformExecutor.java:320)
	at org.apache.wayang.core.platform.CrossPlatformExecutor.executeUntilBreakpoint(CrossPlatformExecutor.java:156)
	at org.apache.wayang.core.api.Job.execute(Job.java:578)
	at org.apache.wayang.core.api.Job.doExecute(Job.java:314)
	... 7 more

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_33b.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,company_name.name AS company_name1,movie_info_idx.info AS movie_info_idx,movie_info_idx.info AS movie_info_idx1,title.title AS title,title.title AS title1 FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN title AS title1 ON title1.id=movie_link.linked_movie_id JOIN movie_info_idx AS movie_info_idx1 ON movie_info_idx1.movie_id=title1.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx1.info_type_id JOIN kind_type AS kind_type1 ON kind_type1.id=title1.kind_id JOIN movie_companies AS movie_companies1 ON movie_companies1.movie_id=title1.id JOIN company_name AS company_name1 ON company_name1.id=movie_companies1.company_id WHERE company_name.country_code = '[nl]' AND info_type.info = 'rating' AND info_type1.info = 'rating' AND kind_type.kind = 'tv series' AND kind_type1.kind = 'tv series' AND link_type.link LIKE '%follow%' AND movie_info_idx1.info < '3.0' AND title1.production_year = '2007';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,company_name.name AS company_name1,movie_info_idx.info AS movie_info_idx,movie_info_idx.info AS movie_info_idx1,title.title AS title,title.title AS title1 FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN title AS title1 ON title1.id=movie_link.linked_movie_id JOIN movie_info_idx AS movie_info_idx1 ON movie_info_idx1.movie_id=title1.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx1.info_type_id JOIN kind_type AS kind_type1 ON kind_type1.id=title1.kind_id JOIN movie_companies AS movie_companies1 ON movie_companies1.movie_id=title1.id JOIN company_name AS company_name1 ON company_name1.id=movie_companies1.company_id WHERE company_name.country_code = '[nl]' AND info_type.info = 'rating' AND info_type1.info = 'rating' AND kind_type.kind = 'tv series' AND kind_type1.kind = 'tv series' AND link_type.link LIKE '%follow%' AND movie_info_idx1.info < '3.0' AND title1.production_year = '2007'; in statement: org.postgresql.jdbc.PgStatement@1c65740a resultset: org.postgresql.jdbc.PgResultSet@6cb59aa
[]

Results:  amount of records: 0

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_33c.sql}
Last 10 output lines: matcher 1: company_name
matcher 3: company_name.id
non used table: movie_companies.company_id
first join: JOIN company_name AS company_name ON company_name.id=movie_companies.company_id
Decompiled into sql query: SELECT company_name.name AS company_name,company_name.name AS company_name1,movie_info_idx.info AS movie_info_idx,movie_info_idx.info AS movie_info_idx1,title.title AS title,title.title AS title1 FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN title AS title1 ON title1.id=movie_link.linked_movie_id JOIN movie_info_idx AS movie_info_idx1 ON movie_info_idx1.movie_id=title1.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx1.info_type_id JOIN kind_type AS kind_type1 ON kind_type1.id=title1.kind_id JOIN movie_companies AS movie_companies1 ON movie_companies1.movie_id=title1.id JOIN company_name AS company_name1 ON company_name1.id=movie_companies1.company_id WHERE company_name.country_code <> '[us]' AND info_type.info = 'rating' AND info_type1.info = 'rating' AND (kind_type.kind = 'tv series' OR kind_type.kind = 'episode') AND (kind_type1.kind = 'tv series' OR kind_type1.kind = 'episode') AND (link_type.link = 'sequel' OR link_type.link = 'follows' OR link_type.link = 'followed by') AND movie_info_idx1.info < '3.5' AND title1.production_year >= '2000' AND title1.production_year <= '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT company_name.name AS company_name,company_name.name AS company_name1,movie_info_idx.info AS movie_info_idx,movie_info_idx.info AS movie_info_idx1,title.title AS title,title.title AS title1 FROM movie_companies JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN title AS title ON title.id=movie_companies.movie_id JOIN movie_info_idx AS movie_info_idx ON movie_info_idx.movie_id=title.id JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN kind_type AS kind_type ON kind_type.id=title.kind_id JOIN movie_link AS movie_link ON movie_link.movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN title AS title1 ON title1.id=movie_link.linked_movie_id JOIN movie_info_idx AS movie_info_idx1 ON movie_info_idx1.movie_id=title1.id JOIN info_type AS info_type1 ON info_type1.id=movie_info_idx1.info_type_id JOIN kind_type AS kind_type1 ON kind_type1.id=title1.kind_id JOIN movie_companies AS movie_companies1 ON movie_companies1.movie_id=title1.id JOIN company_name AS company_name1 ON company_name1.id=movie_companies1.company_id WHERE company_name.country_code <> '[us]' AND info_type.info = 'rating' AND info_type1.info = 'rating' AND (kind_type.kind = 'tv series' OR kind_type.kind = 'episode') AND (kind_type1.kind = 'tv series' OR kind_type1.kind = 'episode') AND (link_type.link = 'sequel' OR link_type.link = 'follows' OR link_type.link = 'followed by') AND movie_info_idx1.info < '3.5' AND title1.production_year >= '2000' AND title1.production_year <= '2010'; in statement: org.postgresql.jdbc.PgStatement@39a8c08f resultset: org.postgresql.jdbc.PgResultSet@5c0d876c
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_3a.sql}
Last 10 output lines: matcher 1: keyword
matcher 3: keyword.id
non used table: movie_keyword.keyword_id
first join: JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id
Decompiled into sql query: SELECT title.title AS title FROM movie_keyword JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_keyword.movie_id JOIN title AS title ON title.id=movie_info.movie_id WHERE keyword.keyword LIKE '%sequel%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German') AND title.production_year > '2005';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_keyword JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_keyword.movie_id JOIN title AS title ON title.id=movie_info.movie_id WHERE keyword.keyword LIKE '%sequel%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German') AND title.production_year > '2005'; in statement: org.postgresql.jdbc.PgStatement@62581ef6 resultset: org.postgresql.jdbc.PgResultSet@1e36baca
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_3b.sql}
Last 10 output lines: matcher 1: keyword
matcher 3: keyword.id
non used table: movie_keyword.keyword_id
first join: JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id
Decompiled into sql query: SELECT title.title AS title FROM movie_keyword JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_keyword.movie_id JOIN title AS title ON title.id=movie_info.movie_id WHERE keyword.keyword LIKE '%sequel%' AND movie_info.info = 'Bulgaria' AND title.production_year > '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_keyword JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_keyword.movie_id JOIN title AS title ON title.id=movie_info.movie_id WHERE keyword.keyword LIKE '%sequel%' AND movie_info.info = 'Bulgaria' AND title.production_year > '2010'; in statement: org.postgresql.jdbc.PgStatement@62581ef6 resultset: org.postgresql.jdbc.PgResultSet@1e36baca
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_3c.sql}
Last 10 output lines: matcher 1: keyword
matcher 3: keyword.id
non used table: movie_keyword.keyword_id
first join: JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id
Decompiled into sql query: SELECT title.title AS title FROM movie_keyword JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_keyword.movie_id JOIN title AS title ON title.id=movie_info.movie_id WHERE keyword.keyword LIKE '%sequel%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND title.production_year > '1990';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_keyword JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN movie_info AS movie_info ON movie_info.movie_id=movie_keyword.movie_id JOIN title AS title ON title.id=movie_info.movie_id WHERE keyword.keyword LIKE '%sequel%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND title.production_year > '1990'; in statement: org.postgresql.jdbc.PgStatement@36cdcae0 resultset: org.postgresql.jdbc.PgResultSet@51fa09c7
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_4a.sql}
Last 10 output lines: matcher 1: info_type
matcher 3: info_type.id
non used table: movie_info_idx.info_type_id
first join: JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id
Decompiled into sql query: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info_idx JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=movie_info_idx.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_info_idx.movie_id WHERE info_type.info = 'rating' AND keyword.keyword LIKE '%sequel%' AND movie_info_idx.info > '5.0' AND title.production_year > '2005' AND title.id = movie_keyword.movie_id;
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info_idx JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=movie_info_idx.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_info_idx.movie_id WHERE info_type.info = 'rating' AND keyword.keyword LIKE '%sequel%' AND movie_info_idx.info > '5.0' AND title.production_year > '2005' AND title.id = movie_keyword.movie_id; in statement: org.postgresql.jdbc.PgStatement@24a7725d resultset: org.postgresql.jdbc.PgResultSet@4fcedf83
[]

Results:  amount of records: 0

Time taken: 3s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_4b.sql}
Last 10 output lines: matcher 1: info_type
matcher 3: info_type.id
non used table: movie_info_idx.info_type_id
first join: JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id
Decompiled into sql query: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info_idx JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN title AS title ON title.id=movie_info_idx.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE info_type.info = 'rating' AND keyword.keyword LIKE '%sequel%' AND movie_info_idx.info > '9.0' AND title.production_year > '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info_idx JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN title AS title ON title.id=movie_info_idx.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE info_type.info = 'rating' AND keyword.keyword LIKE '%sequel%' AND movie_info_idx.info > '9.0' AND title.production_year > '2010'; in statement: org.postgresql.jdbc.PgStatement@31cd0efa resultset: org.postgresql.jdbc.PgResultSet@3294102e
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_4c.sql}
Last 10 output lines: matcher 1: info_type
matcher 3: info_type.id
non used table: movie_info_idx.info_type_id
first join: JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id
Decompiled into sql query: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info_idx JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN title AS title ON title.id=movie_info_idx.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE info_type.info = 'rating' AND keyword.keyword LIKE '%sequel%' AND movie_info_idx.info > '2.0' AND title.production_year > '1990';
got to creating result set iterator: 
SqlToStream: executing: SELECT movie_info_idx.info AS movie_info_idx,title.title AS title FROM movie_info_idx JOIN info_type AS info_type ON info_type.id=movie_info_idx.info_type_id JOIN title AS title ON title.id=movie_info_idx.movie_id JOIN movie_keyword AS movie_keyword ON movie_keyword.movie_id=title.id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id WHERE info_type.info = 'rating' AND keyword.keyword LIKE '%sequel%' AND movie_info_idx.info > '2.0' AND title.production_year > '1990'; in statement: org.postgresql.jdbc.PgStatement@7bad18f5 resultset: org.postgresql.jdbc.PgResultSet@4407fea2
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_5a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: movie_info.movie_id
first join: JOIN title AS title ON title.id=movie_info.movie_id
Decompiled into sql query: SELECT title.title AS title FROM movie_info JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id WHERE company_type.kind = 'production companies' AND movie_companies.note LIKE '%(theatrical)%' AND movie_companies.note LIKE '%(France)%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German') AND title.production_year > '2005';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_info JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id WHERE company_type.kind = 'production companies' AND movie_companies.note LIKE '%(theatrical)%' AND movie_companies.note LIKE '%(France)%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German') AND title.production_year > '2005'; in statement: org.postgresql.jdbc.PgStatement@226e95e9 resultset: org.postgresql.jdbc.PgResultSet@27bf574b
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_5b.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: movie_info.movie_id
first join: JOIN title AS title ON title.id=movie_info.movie_id
Decompiled into sql query: SELECT title.title AS title FROM movie_info JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id WHERE company_type.kind = 'production companies' AND movie_companies.note LIKE '%(VHS)%' AND movie_companies.note LIKE '%(USA)%' AND movie_companies.note LIKE '%(1994)%' AND (movie_info.info = 'USA' OR movie_info.info = 'America') AND title.production_year > '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_info JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id WHERE company_type.kind = 'production companies' AND movie_companies.note LIKE '%(VHS)%' AND movie_companies.note LIKE '%(USA)%' AND movie_companies.note LIKE '%(1994)%' AND (movie_info.info = 'USA' OR movie_info.info = 'America') AND title.production_year > '2010'; in statement: org.postgresql.jdbc.PgStatement@5e0bba2f resultset: org.postgresql.jdbc.PgResultSet@41d53813
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_5c.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: movie_info.movie_id
first join: JOIN title AS title ON title.id=movie_info.movie_id
Decompiled into sql query: SELECT title.title AS title FROM movie_info JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id WHERE company_type.kind = 'production companies' AND  NOT (movie_companies.note LIKE '%(TV)%') AND movie_companies.note LIKE '%(USA)%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND title.production_year > '1990';
got to creating result set iterator: 
SqlToStream: executing: SELECT title.title AS title FROM movie_info JOIN title AS title ON title.id=movie_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_type AS company_type ON company_type.id=movie_companies.company_type_id JOIN info_type AS info_type ON info_type.id=movie_info.info_type_id WHERE company_type.kind = 'production companies' AND  NOT (movie_companies.note LIKE '%(TV)%') AND movie_companies.note LIKE '%(USA)%' AND (movie_info.info = 'Sweden' OR movie_info.info = 'Norway' OR movie_info.info = 'Germany' OR movie_info.info = 'Denmark' OR movie_info.info = 'Swedish' OR movie_info.info = 'Denish' OR movie_info.info = 'Norwegian' OR movie_info.info = 'German' OR movie_info.info = 'USA' OR movie_info.info = 'American') AND title.production_year > '1990'; in statement: org.postgresql.jdbc.PgStatement@67d8613 resultset: org.postgresql.jdbc.PgResultSet@5667dd90
[Record[11,830,420]]

Results:  amount of records: 1

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_6a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: movie_keyword.movie_id
first join: JOIN title AS title ON title.id=movie_keyword.movie_id
Decompiled into sql query: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN title AS title ON title.id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN cast_info AS cast_info ON cast_info.movie_id=title.id JOIN name AS name ON name.id=cast_info.person_id WHERE keyword.keyword = 'marvel-cinematic-universe' AND name.name LIKE '%Downey%Robert%' AND title.production_year > '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN title AS title ON title.id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN cast_info AS cast_info ON cast_info.movie_id=title.id JOIN name AS name ON name.id=cast_info.person_id WHERE keyword.keyword = 'marvel-cinematic-universe' AND name.name LIKE '%Downey%Robert%' AND title.production_year > '2010'; in statement: org.postgresql.jdbc.PgStatement@698e1bf5 resultset: org.postgresql.jdbc.PgResultSet@7a85dc58
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_6b.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: movie_keyword.movie_id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id
Decompiled into sql query: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND name.name LIKE '%downey%robert%' AND title.production_year > '2014';
got to creating result set iterator: 
SqlToStream: executing: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND name.name LIKE '%downey%robert%' AND title.production_year > '2014'; in statement: org.postgresql.jdbc.PgStatement@326dbe25 resultset: org.postgresql.jdbc.PgResultSet@647aa45c
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_6c.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: movie_keyword.movie_id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id
Decompiled into sql query: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE keyword.keyword = 'marvel-cinematic-universe' AND name.name LIKE '%downey%robert%' AND title.production_year > '2014';
got to creating result set iterator: 
SqlToStream: executing: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE keyword.keyword = 'marvel-cinematic-universe' AND name.name LIKE '%downey%robert%' AND title.production_year > '2014'; in statement: org.postgresql.jdbc.PgStatement@5e0bba2f resultset: org.postgresql.jdbc.PgResultSet@41d53813
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_6d.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: movie_keyword.movie_id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id
Decompiled into sql query: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND name.name LIKE '%Downey%Robert%' AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND name.name LIKE '%Downey%Robert%' AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@261609a7 resultset: org.postgresql.jdbc.PgResultSet@39296cef
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_6e.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: movie_keyword.movie_id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id
Decompiled into sql query: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE keyword.keyword = 'marvel-cinematic-universe' AND name.name LIKE '%Downey%Robert%' AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE keyword.keyword = 'marvel-cinematic-universe' AND name.name LIKE '%Downey%Robert%' AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@5e0bba2f resultset: org.postgresql.jdbc.PgResultSet@41d53813
[]

Results:  amount of records: 0

Time taken: 4s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_6f.sql}
Last 10 output lines: matcher 1: cast_info
matcher 3: cast_info.movie_id
non used table: movie_keyword.movie_id
first join: JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id
Decompiled into sql query: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND title.production_year > '2000';
got to creating result set iterator: 
SqlToStream: executing: SELECT keyword.keyword AS keyword,name.name AS name,title.title AS title FROM movie_keyword JOIN cast_info AS cast_info ON cast_info.movie_id=movie_keyword.movie_id JOIN keyword AS keyword ON keyword.id=movie_keyword.keyword_id JOIN title AS title ON title.id=movie_keyword.movie_id JOIN name AS name ON name.id=cast_info.person_id WHERE (keyword.keyword = 'superhero' OR keyword.keyword = 'sequel' OR keyword.keyword = 'second-part' OR keyword.keyword = 'marvel-comics' OR keyword.keyword = 'based-on-comic' OR keyword.keyword = 'tv-special' OR keyword.keyword = 'fight' OR keyword.keyword = 'violence') AND title.production_year > '2000'; in statement: org.postgresql.jdbc.PgStatement@2c06e145 resultset: org.postgresql.jdbc.PgResultSet@3b780b5c
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_7a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: cast_info.movie_id
first join: JOIN title AS title ON title.id=cast_info.movie_id
Decompiled into sql query: SELECT name.name AS name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_link AS movie_link ON movie_link.linked_movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN name AS name ON name.id=cast_info.person_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN person_info AS person_info ON person_info.person_id=name.id JOIN info_type AS info_type ON info_type.id=person_info.info_type_id WHERE aka_name.name LIKE '%a%' AND info_type.info = 'mini biography' AND link_type.link = 'features' AND name.name >= 'A' AND name.name <= 'F' AND (name.gender = 'm' OR name.gender = 'f' AND name.name LIKE 'B%') AND person_info.note = 'Volker Boehm' AND title.production_year >= '1980' AND title.production_year <= '1995';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_link AS movie_link ON movie_link.linked_movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN name AS name ON name.id=cast_info.person_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN person_info AS person_info ON person_info.person_id=name.id JOIN info_type AS info_type ON info_type.id=person_info.info_type_id WHERE aka_name.name LIKE '%a%' AND info_type.info = 'mini biography' AND link_type.link = 'features' AND name.name >= 'A' AND name.name <= 'F' AND (name.gender = 'm' OR name.gender = 'f' AND name.name LIKE 'B%') AND person_info.note = 'Volker Boehm' AND title.production_year >= '1980' AND title.production_year <= '1995'; in statement: org.postgresql.jdbc.PgStatement@2487b621 resultset: org.postgresql.jdbc.PgResultSet@3d2ff73a
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_7b.sql}
Last 10 output lines: matcher 1: aka_name
matcher 3: aka_name.person_id
non used table: name.id
first join: JOIN aka_name AS aka_name ON aka_name.person_id=name.id
Decompiled into sql query: SELECT name.name AS name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN person_info AS person_info ON person_info.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_link AS movie_link ON movie_link.linked_movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN info_type AS info_type ON info_type.id=person_info.info_type_id WHERE aka_name.name LIKE '%a%' AND info_type.info = 'mini biography' AND link_type.link = 'features' AND name.name LIKE 'D%' AND name.gender = 'm' AND person_info.note = 'Volker Boehm' AND title.production_year >= '1980' AND title.production_year <= '1984';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN person_info AS person_info ON person_info.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_link AS movie_link ON movie_link.linked_movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN info_type AS info_type ON info_type.id=person_info.info_type_id WHERE aka_name.name LIKE '%a%' AND info_type.info = 'mini biography' AND link_type.link = 'features' AND name.name LIKE 'D%' AND name.gender = 'm' AND person_info.note = 'Volker Boehm' AND title.production_year >= '1980' AND title.production_year <= '1984'; in statement: org.postgresql.jdbc.PgStatement@105cdf61 resultset: org.postgresql.jdbc.PgResultSet@530bd77b
[]

Results:  amount of records: 0

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_7c.sql}
Last 10 output lines: matcher 1: aka_name
matcher 3: aka_name.person_id
non used table: name.id
first join: JOIN aka_name AS aka_name ON aka_name.person_id=name.id
Decompiled into sql query: SELECT name.name AS name,person_info.info AS person_info FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN person_info AS person_info ON person_info.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_link AS movie_link ON movie_link.linked_movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN info_type AS info_type ON info_type.id=person_info.info_type_id WHERE aka_name.name IS NOT NULL AND (aka_name.name LIKE '%a%' OR aka_name.name LIKE 'A%') AND info_type.info = 'mini biography' AND (link_type.link = 'references' OR link_type.link = 'referenced in' OR link_type.link = 'features' OR link_type.link = 'featured in') AND name.name >= 'A' AND name.name <= 'F' AND (name.gender = 'm' OR name.gender = 'f' AND name.name LIKE 'A%') AND person_info.note IS NOT NULL AND title.production_year >= '1980' AND title.production_year <= '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT name.name AS name,person_info.info AS person_info FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN person_info AS person_info ON person_info.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_link AS movie_link ON movie_link.linked_movie_id=title.id JOIN link_type AS link_type ON link_type.id=movie_link.link_type_id JOIN info_type AS info_type ON info_type.id=person_info.info_type_id WHERE aka_name.name IS NOT NULL AND (aka_name.name LIKE '%a%' OR aka_name.name LIKE 'A%') AND info_type.info = 'mini biography' AND (link_type.link = 'references' OR link_type.link = 'referenced in' OR link_type.link = 'features' OR link_type.link = 'featured in') AND name.name >= 'A' AND name.name <= 'F' AND (name.gender = 'm' OR name.gender = 'f' AND name.name LIKE 'A%') AND person_info.note IS NOT NULL AND title.production_year >= '1980' AND title.production_year <= '2010'; in statement: org.postgresql.jdbc.PgStatement@65dd2191 resultset: org.postgresql.jdbc.PgResultSet@6a905513
[]

Results:  amount of records: 0

Time taken: 7s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_8a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: cast_info.movie_id
first join: JOIN title AS title ON title.id=cast_info.movie_id
Decompiled into sql query: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN name AS name ON name.id=cast_info.person_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note = '(voice: English version)' AND company_name.country_code = '[jp]' AND movie_companies.note LIKE '%(Japan)%' AND  NOT (movie_companies.note LIKE '%(USA)%') AND name.name LIKE '%Yo%' AND  NOT (name.name LIKE '%Yu%') AND role_type.role = 'actress' AND aka_name.person_id = cast_info.person_id AND cast_info.movie_id = movie_companies.movie_id;
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN name AS name ON name.id=cast_info.person_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note = '(voice: English version)' AND company_name.country_code = '[jp]' AND movie_companies.note LIKE '%(Japan)%' AND  NOT (movie_companies.note LIKE '%(USA)%') AND name.name LIKE '%Yo%' AND  NOT (name.name LIKE '%Yu%') AND role_type.role = 'actress' AND aka_name.person_id = cast_info.person_id AND cast_info.movie_id = movie_companies.movie_id; in statement: org.postgresql.jdbc.PgStatement@18d14de3 resultset: org.postgresql.jdbc.PgResultSet@469bd719
[Record[Chambers, Linda, .hack//Quantum]]

Results:  amount of records: 1

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_8b.sql}
Last 10 output lines: matcher 1: aka_name
matcher 3: aka_name.person_id
non used table: name.id
first join: JOIN aka_name AS aka_name ON aka_name.person_id=name.id
Decompiled into sql query: SELECT aka_name.name AS aka_name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note = '(voice: English version)' AND company_name.country_code = '[jp]' AND movie_companies.note LIKE '%(Japan)%' AND  NOT (movie_companies.note LIKE '%(USA)%') AND (movie_companies.note LIKE '%(2006)%' OR movie_companies.note LIKE '%(2007)%') AND name.name LIKE '%Yo%' AND  NOT (name.name LIKE '%Yu%') AND role_type.role = 'actress' AND title.production_year >= '2006' AND title.production_year <= '2007' AND (title.title LIKE 'One Piece%' OR title.title LIKE 'Dragon Ball Z%');
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE cast_info.note = '(voice: English version)' AND company_name.country_code = '[jp]' AND movie_companies.note LIKE '%(Japan)%' AND  NOT (movie_companies.note LIKE '%(USA)%') AND (movie_companies.note LIKE '%(2006)%' OR movie_companies.note LIKE '%(2007)%') AND name.name LIKE '%Yo%' AND  NOT (name.name LIKE '%Yu%') AND role_type.role = 'actress' AND title.production_year >= '2006' AND title.production_year <= '2007' AND (title.title LIKE 'One Piece%' OR title.title LIKE 'Dragon Ball Z%'); in statement: org.postgresql.jdbc.PgStatement@5c2ae7d7 resultset: org.postgresql.jdbc.PgResultSet@6e7cb01a
[Record[Chambers, Linda, Dragon Ball Z: Shin Budokai]]

Results:  amount of records: 1

Time taken: 13s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_8c.sql}
Last 10 output lines: matcher 1: aka_name
matcher 3: aka_name.person_id
non used table: name.id
first join: JOIN aka_name AS aka_name ON aka_name.person_id=name.id
Decompiled into sql query: SELECT aka_name.name AS aka_name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE company_name.country_code = '[us]' AND role_type.role = 'writer';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE company_name.country_code = '[us]' AND role_type.role = 'writer'; in statement: org.postgresql.jdbc.PgStatement@2b9bbaa8 resultset: org.postgresql.jdbc.PgResultSet@11771fd6
[Record["A.J.", #1 Cheerleader Camp]]

Results:  amount of records: 1

Time taken: 7s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_8d.sql}
Last 10 output lines: matcher 1: aka_name
matcher 3: aka_name.person_id
non used table: name.id
first join: JOIN aka_name AS aka_name ON aka_name.person_id=name.id
Decompiled into sql query: SELECT aka_name.name AS aka_name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE company_name.country_code = '[us]' AND role_type.role = 'costume designer';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE company_name.country_code = '[us]' AND role_type.role = 'costume designer'; in statement: org.postgresql.jdbc.PgStatement@65f3f9e2 resultset: org.postgresql.jdbc.PgResultSet@394950ad
[Record["Jenny from the Block", #1 Cheerleader Camp]]

Results:  amount of records: 1

Time taken: 6s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_9a.sql}
Last 10 output lines: matcher 1: title
matcher 3: title.id
non used table: cast_info.movie_id
first join: JOIN title AS title ON title.id=cast_info.movie_id
Decompiled into sql query: SELECT aka_name.name AS aka_name,name.name AS char_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN name AS name ON name.id=cast_info.person_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND movie_companies.note IS NOT NULL AND (movie_companies.note LIKE '%(USA)%' OR movie_companies.note LIKE '%(worldwide)%') AND name.gender = 'f' AND name.name LIKE '%Ang%' AND role_type.role = 'actress' AND title.production_year >= '2005' AND title.production_year <= '2015';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,name.name AS char_name,title.title AS title FROM cast_info JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN name AS name ON name.id=cast_info.person_id JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND movie_companies.note IS NOT NULL AND (movie_companies.note LIKE '%(USA)%' OR movie_companies.note LIKE '%(worldwide)%') AND name.gender = 'f' AND name.name LIKE '%Ang%' AND role_type.role = 'actress' AND title.production_year >= '2005' AND title.production_year <= '2015'; in statement: org.postgresql.jdbc.PgStatement@3c981f76 resultset: org.postgresql.jdbc.PgResultSet@4844e24b
[Record[AJ, Angeline, Moriah, Blue Harvest]]

Results:  amount of records: 1

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_9b.sql}
Last 10 output lines: matcher 1: aka_name
matcher 3: aka_name.person_id
non used table: name.id
first join: JOIN aka_name AS aka_name ON aka_name.person_id=name.id
Decompiled into sql query: SELECT aka_name.name AS aka_name,name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE cast_info.note = '(voice)' AND company_name.country_code = '[us]' AND movie_companies.note LIKE '%(200%)%' AND (movie_companies.note LIKE '%(USA)%' OR movie_companies.note LIKE '%(worldwide)%') AND name.gender = 'f' AND name.name LIKE '%Angel%' AND role_type.role = 'actress' AND title.production_year >= '2007' AND title.production_year <= '2010';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE cast_info.note = '(voice)' AND company_name.country_code = '[us]' AND movie_companies.note LIKE '%(200%)%' AND (movie_companies.note LIKE '%(USA)%' OR movie_companies.note LIKE '%(worldwide)%') AND name.gender = 'f' AND name.name LIKE '%Angel%' AND role_type.role = 'actress' AND title.production_year >= '2007' AND title.production_year <= '2010'; in statement: org.postgresql.jdbc.PgStatement@16a15261 resultset: org.postgresql.jdbc.PgResultSet@36ec4071
[Record[AJ, Bassett, Angela, Bassett, Angela, Blue Harvest]]

Results:  amount of records: 1

Time taken: 5s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_9c.sql}
Last 10 output lines: matcher 1: aka_name
matcher 3: aka_name.person_id
non used table: name.id
first join: JOIN aka_name AS aka_name ON aka_name.person_id=name.id
Decompiled into sql query: SELECT aka_name.name AS aka_name,name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND name.gender = 'f' AND name.name LIKE '%An%' AND role_type.role = 'actress';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND name.gender = 'f' AND name.name LIKE '%An%' AND role_type.role = 'actress'; in statement: org.postgresql.jdbc.PgStatement@53a3fc8b resultset: org.postgresql.jdbc.PgResultSet@337e573b
[Record['Annette', Alborg, Ana Esther, Alborg, Ana Esther, (1975-01-20)]]

Results:  amount of records: 1

Time taken: 8s
Exitcode: {0}
Filepath: {/var/www/html/wayang-plugins/wayang-ml/src/main/resources/calcite-ready-job-queries/m_9d.sql}
Last 10 output lines: matcher 1: aka_name
matcher 3: aka_name.person_id
non used table: name.id
first join: JOIN aka_name AS aka_name ON aka_name.person_id=name.id
Decompiled into sql query: SELECT aka_name.name AS aka_name,name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND name.gender = 'f' AND role_type.role = 'actress';
got to creating result set iterator: 
SqlToStream: executing: SELECT aka_name.name AS aka_name,name.name AS char_name,name.name AS name,title.title AS title FROM name JOIN aka_name AS aka_name ON aka_name.person_id=name.id JOIN cast_info AS cast_info ON cast_info.person_id=name.id JOIN title AS title ON title.id=cast_info.movie_id JOIN movie_companies AS movie_companies ON movie_companies.movie_id=title.id JOIN company_name AS company_name ON company_name.id=movie_companies.company_id JOIN role_type AS role_type ON role_type.id=cast_info.role_id JOIN char_name AS char_name ON char_name.id=cast_info.person_role_id WHERE (cast_info.note = '(voice)' OR cast_info.note = '(voice: Japanese version)' OR cast_info.note = '(voice) (uncredited)' OR cast_info.note = '(voice: English version)') AND company_name.country_code = '[us]' AND name.gender = 'f' AND role_type.role = 'actress'; in statement: org.postgresql.jdbc.PgStatement@147aceec resultset: org.postgresql.jdbc.PgResultSet@68838767
[Record[!!!, Toy, Aaron, Caroline, Aaron, Caroline, $15,000.00 Error]]

Results:  amount of records: 1

